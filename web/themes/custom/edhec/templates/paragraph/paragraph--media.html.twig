{#
/**
* @file
* Default theme implementation to display a paragraph.
*
* Available variables:
* - paragraph: Full paragraph entity.
* Only method names starting with "get", "has", or "is" and a few common
* methods such as "id", "label", and "bundle" are available. For example:
* - paragraph.getCreatedTime() will return the paragraph creation timestamp.
* - paragraph.id(): The paragraph ID.
* - paragraph.bundle(): The type of the paragraph, for example, "image" or "text".
* - paragraph.getOwnerId(): The user ID of the paragraph author.
* See Drupal\paragraphs\Entity\Paragraph for a full list of public properties
* and methods for the paragraph object.
* - content: All paragraph items. Use {{ content }} to print them all,
* or print a subset such as {{ content.field_example }}. Use
* {{ content|without('field_example') }} to temporarily suppress the printing
* of a given child element.
* - attributes: HTML attributes for the containing element.
* The attributes.class element may contain one or more of the following
* classes:
* - paragraphs: The current template type (also known as a "theming hook").
* - paragraphs--type-[type]: The current paragraphs type. For example, if the paragraph is an
* "Image" it would result in "paragraphs--type--image". Note that the machine
* name will often be in a short form of the human readable label.
* - paragraphs--view-mode--[view_mode]: The View Mode of the paragraph; for example, a
* preview would result in: "paragraphs--view-mode--preview", and
* default: "paragraphs--view-mode--default".
* - view_mode: View mode; for example, "preview" or "full".
* - logged_in: Flag for authenticated user status. Will be true when the
* current user is a logged-in member.
* - is_admin: Flag for admin user status. Will be true when the current user
* is an administrator.
*
* @see template_preprocess_paragraph()
*
* @ingroup themeable
*/
#}
{%
set classes = [
'paragraph',
'paragraph--type--' ~ paragraph.bundle|clean_class,
view_mode ? 'paragraph--view-mode--' ~ view_mode|clean_class,
not paragraph.isPublished() ? 'paragraph--unpublished'
]
%}
{% block paragraph %}
<div id="ancre-{{paragraph.id.value}}"  class="container-fluid paragraph paragraph--type--media p-50 paragraph--view-mode--default fond fond-{{ paragraph.field_fond.value }}">
    <div class="container p-0">
        <div class="row m-0 paragraph justify-content-center">
            {% block content %}
            {% for key, item in content.field_medias if key|first != '#' %}
            <div class="{{ paragraph.field_largeur.value }} col-mobile p-0">
                {#{{ item['#media'].bundle.0.value.target_id }}#}
                {# item['#media'].field_media_image.entity.fileuri #}
                {# file_url(paragraph.field_medias.entity.field_media_image.entity.fileuri) #}
                {% if item['#media'].bundle.0.value.target_id == "image" %}
                {#numero : {{ key }}#}
                {#- url : {{ item['#paragraph'].field_medias.field_media_image.value }}#}
                {#- Legende 2 : {{ item['#media'].field_legende.value }}#}
                {#- url 3 : {{ item['#media'].field_media_image.entity.0.value }}#}

                <figure  role="figure" aria-label="{{ item['#media'].field_legende.value }}" class="figure">
                    <img class="img-fluid" src="{{ file_url(paragraph.field_medias[key].entity.field_media_image.entity.fileuri) }}" 
                         alt="{{ paragraph.field_medias[key].entity.fields.field_media_image.alt }}" /> 
                        {#{ dump(paragraph.field_medias[key].entity.fields.field_media_image.alt) }#}
                    <figcaption class="figure-caption fst-italic">{{ item['#media'].field_legende.value }}</figcaption>
                </figure>
                {% endif %}
                {#remote_video#}
                {% if item['#media'].bundle.0.value.target_id == "remote_video" %}
                    <div class="remote-video">
                    {{ item }}
                    </div>
                {% endif %}
                {#Internal_video#}
                {% if item['#media'].bundle.0.value.target_id == "video" %}
                <div class="media-video">
                    {{ item }}
                    <div class="play-btn" class="video-controls">PLAY</div>
                </div>
                {% endif %}
                {#Internal_audio#}
                {% if item['#media'].bundle.0.value.target_id == "audio" %}
                {#{{ dump(paragraph.field_medias[key].entity.field_audio_field_title.value) }}#}
                
                {#{{ dump(paragraph.field_medias[key].entity.field_field_media_audio_descript.value) }}#}
                {#{{ dump(paragraph.field_medias[key].entity.field_audio_file_category.value) }}#}
                {#{{ dump(paragraph.field_medias[key].entity.field_media_audio_file.entity.fields.uri) }}#}
                <div class="block_audio">
                    <div class="container p-0">
                        <div class="row">
                            <div class="{{ paragraph.field_largeur.value }} paragraph_bg">
                            {{ item }}
                                <a class="js-help-link" href="#" title="{{(paragraph.field_medias[key].entity.field_field_media_audio_descript.value)}}"></a>
                            </div>    
                        </div>
                    </div>
                </div>
{#
                {#<div class="block_audio">#}
                {#    <div class="container">#}
                {#        <div class="row">#}
                {#            <div class="col-8">#}
                {#            <h3>{{ paragraph.field_medias[key].entity.field_audio_file_category.value }}</h3>#}
                {#            {{ paragraph.field_medias[key].entity.field_field_media_audio_descript.value }}#}
                {#            {{ paragraph.field_medias[key].entity.field_audio_file }}#}
                {#            -{{ item }}#}
                {#            {{ dump(item) }}#}
                {#            </div>  #}
                {#            <div class="col-4">#}
                {#                <img src="{{ file_url(paragraph.field_medias[key].entity.field_audio_file_image.entity.fileuri) }}" alt="audio">#}
                {#            </div>    #}
                {#        </div>#}
                {#    </div>#}
                {#</div>#}
                {# <div class="js-audio-player audio-player">#}
                    {# <audio class="js-audio" preload="metadata">#}
                        {#
                        <source src="http://incompetech.com/music/royalty-free/mp3-royaltyfree/Hitman.mp3" type="audio/mp3">#}
                        {# </audio>#}
                    {# <div class="js-progress-slider-background progress-slider-background">#}
                        {#
                        <div class="js-progress-slider progress-slider" />#}
                        {# </div>#}
                    {# </div>#}
                {# <div class="controls">#}
                    {# <div class="left-controls">#}
                        {# <button class="js-play"> <i class="material-icons">play_arrow</i> </button>#}
                        {#<div class="js-play play-btn">PLAY</div>#}
                        {# <button class="js-pause" style="display:none"> <i class="material-icons">pause</i> </button>#}
                        {# <button class="js-replay replay-button"> <i class="material-icons material-icons-replayforward"> replay_10 </i> </button>#}
                        {# <button class="js-forward"> <i class="material-icons material-icons-replayforward"> forward_30 </i> </button>#}
                        {# </div>#}
                    {# <div class="right-controls">#}
                        {# <span class="js-playback-time"></span>#}
                        {# <span class="playback-time"></span>#}
                        {# </div>#}
                    {# </div>#}
                {# </div>#}
            {#</div>#}
        {% endif %}
    </div>
    {% endfor %}
    {% endblock %}
</div>
</div>
</div>
{% endblock paragraph %}