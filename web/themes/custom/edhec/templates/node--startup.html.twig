{#
/**
 * @file
 * Theme override to display a node.
 *
 * Available variables:
 * - node: The node entity with limited access to object properties and methods.
 *   Only method names starting with "get", "has", or "is" and a few common
 *   methods such as "id", "label", and "bundle" are available. For example:
 *   - node.getCreatedTime() will return the node creation timestamp.
 *   - node.hasField('field_example') returns TRUE if the node bundle includes
 *     field_example. (This does not indicate the presence of a value in this
 *     field.)
 *   - node.isPublished() will return whether the node is published or not.
 *   Calling other methods, such as node.delete(), will result in an exception.
 *   See \Drupal\node\Entity\Node for a full list of public properties and
 *   methods for the node object.
 * - label: (optional) The title of the node.
 * - content: All node items. Use {{ content }} to print them all,
 *   or print a subset such as {{ content.field_example }}. Use
 *   {{ content|without('field_example') }} to temporarily suppress the printing
 *   of a given child element.
 * - author_picture: The node author user entity, rendered using the "compact"
 *   view mode.
 * - metadata: Metadata for this node.
 * - date: (optional) Themed creation date field.
 * - author_name: (optional) Themed author name field.
 * - url: Direct URL of the current node.
 * - display_submitted: Whether submission information should be displayed.
 * - attributes: HTML attributes for the containing element.
 *   The attributes.class element may contain one or more of the following
 *   classes:
 *   - node: The current template type (also known as a "theming hook").
 *   - node--type-[type]: The current node type. For example, if the node is an
 *     "Article" it would result in "node--type-article". Note that the machine
 *     name will often be in a short form of the human readable label.
 *   - node--view-mode-[view_mode]: The View Mode of the node; for example, a
 *     teaser would result in: "node--view-mode-teaser", and
 *     full: "node--view-mode-full".
 *   The following are controlled through the node publishing options.
 *   - node--promoted: Appears on nodes promoted to the front page.
 *   - node--sticky: Appears on nodes ordered above other non-sticky nodes in
 *     teaser listings.
 *   - node--unpublished: Appears on unpublished nodes visible only to site
 *     admins.
 * - title_attributes: Same as attributes, except applied to the main title
 *   tag that appears in the template.
 * - content_attributes: Same as attributes, except applied to the main
 *   content tag that appears in the template.
 * - author_attributes: Same as attributes, except applied to the author of
 *   the node tag that appears in the template.
 * - title_prefix: Additional output populated by modules, intended to be
 *   displayed in front of the main title tag that appears in the template.
 * - title_suffix: Additional output populated by modules, intended to be
 *   displayed after the main title tag that appears in the template.
 * - view_mode: View mode; for example, "teaser" or "full".
 * - teaser: Flag for the teaser state. Will be true if view_mode is 'teaser'.
 * - page: Flag for the full page state. Will be true if view_mode is 'full'.
 * - readmore: Flag for more state. Will be true if the teaser content of the
 *   node cannot hold the main body content.
 * - logged_in: Flag for authenticated user status. Will be true when the
 *   current user is a logged-in member.
 * - is_admin: Flag for admin user status. Will be true when the current user
 *   is an administrator.
 *
 * @see template_preprocess_node()
 *
 */
#}
{%
  set classes = [
    'node position-relative',
    'node--type-' ~ node.bundle|clean_class,
    node.isPromoted() ? 'node--promoted',
    node.isSticky() ? 'node--sticky',
    not node.isPublished() ? 'node--unpublished',
    view_mode ? 'node--view-mode-' ~ view_mode|clean_class,
  ]
%}
{{ attach_library('classy/node') }}
<article{{ attributes.addClass(classes) }}>


    <div class="node__content">
         <div class="hero hero-interne fond-1">
            <div class="container w-990 p-50 pe-xl-0 ps-xl-0">
              <div class="row g-0">
                <div class="col-3 p-2 align-self-center text-center">{{ content.field_logo }}</div>
                <div class="col-9 align-self-center"> 
                  <div class="card-body">
                    <h1 class="h3">{{ label }}</h1>
                    <div class="actualite-infos">{{ content.field_profil }} | {{ content.field_lieu_d_incubation }} </div>
                    <div class="social-startup">
                    {%  if content.field_facebook.0['#url'] is not empty %}
                    <a href="
                    {{ content.field_facebook.0['#url'] }}" rel="nofollow" target="_blank"><i class="fa fa-facebook icon" aria-hidden="true"></i></a>
                	{% endif %}
                	{%  if content.field_twitter.0['#url'] is not empty %}
                    <a href="{{ content.field_twitter.0['#url'] }}" rel="nofollow" target="_blank"><i class="fa fa-twitter icon" aria-hidden="true"></i></a>
                    {% endif %}
                    {%  if content.field_linkedin.0['#url'] is not empty %}
                    <a href="{{ content.field_linkedin.0['#url'] }}" rel="nofollow" target="_blank"><i class="fa fa-linkedin icon" aria-hidden="true"></i></a>
                    {% endif %}
                    {%  if content.field_instagram.0['#url'] is not empty %}
                    <a href="{{ content.field_instagram.0['#url'] }}" rel="nofollow" target="_blank"><i class="fa fa-instagram icon" aria-hidden="true"></i></a>
                    {% endif %}
                    </div>
                  </div>
              </div>
              {% if content.field_site_web.0 is not empty %}
                  <div class="sidebar-container shadow position-absolute top-50 end-0 translate-middle-y w-auto text-center">
                    {{content.field_site_web}}
                  </div>
              {% endif %}
            </div>
            </div>
        </div>

    <div class="container w-990 p-50 pe-xl-0 ps-xl-0 pb-0">
        <div class="menu-parent mb-0 pe-0 ms-0 me-0">
            <a href="{{"retour_startup"|trans}}">{{"Return"|trans}}</a> 
        </div>
    </div>
     <div class="field__item reveal">
        <div class="container p-50 pe-xl-0 ps-xl-0 container w-990">
        	<div class="row">
        	{% if (content.field_photo.0 is not empty) or (content.field_promo.0 is not empty) or (content.field_chapo.0 is not empty) or (content.field_interview.0 is not empty)  %}
        		<div class="col-md-8">
        			{{ content.body }}
        		</div>


	        	<div class="col-md-4 pb-3">
	        		{% if content.field_photo.0 is not empty %}
	        			<div class="mb-3">
	        				{{ content.field_photo.0 }}
	        			</div>
	        		
	        		{% endif %}

	        		{% if content.field_promo.0 is not empty %}
	        		 <h3 class="pt-0">{{ content.field_promo.0 }}</h3>
	        		{% endif %}
	        		{% if content.field_chapo.0 is not empty %}
	        		{{ content.field_chapo.0 }}
	        		{% endif %}
					{% if content.field_interview.0 is not empty %}
							<div class="w-auto mt-2">
								<a href="{{content.field_interview.0['#url']}}" target="blank" class="bn rouge arrow_next">{{"See the interview"|trans}}</a>
							</div>
					{% endif %}
	        	</div>

        	</div>
          {% else %}
          	<div class="col-md-12">
        		{{ content.body }}
        	</div>
          {% endif %}
        </div>
      </div>

  </div>

</article>
<div class="container-flid"><hr/></div>
<div class="container py-5">
			<div class="row px-4">
				<div class="item-bio">
					<h2 class="mb-2">{{"Startup made in EDHEC"|trans}}</h2>
					{{ drupal_view('startup', 'block_2') }}
				</div>
			</div>
</div>
<div class="container-flid"><hr/></div>
